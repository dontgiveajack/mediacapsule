/**
 * MediaCapsule API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AccountLevel } from './accountLevel';
import { DomainImageSettings } from './domainImageSettings';
import { DomainMiscSettings } from './domainMiscSettings';
import { DomainUser } from './domainUser';
import { DomainVideoSettings } from './domainVideoSettings';
import { FileCatalystSettings } from './fileCatalystSettings';
import { StoragePolicy } from './storagePolicy';


export class Domain {
    constructor() {
        this.dataStores = [];

        this.storagePolicy = new StoragePolicy();
        this.miscSettings = new DomainMiscSettings();
        this.videoSettings = new DomainVideoSettings();
        this.imageSettings = new DomainImageSettings();

        this.fileCatalystSettings = new FileCatalystSettings();
        this.fileCatalystSettings.fileCatalystMiscSettings = new DomainMiscSettings();
        this.fileCatalystSettings.fileCatalystVideoSettings = new DomainVideoSettings();
        this.fileCatalystSettings.fileCatalystImageSettings = new DomainImageSettings();
    }

    name?: string;
    mediaFluxDomain?: string;
    primaryEmail?: string;
    dateCreated?: Date;
    accountLevel?: AccountLevel;
    users?: Array<DomainUser>;
    contactFirstName?: string;
    contactLastName?: string;
    subdomain?: string;
    videoSettings?: DomainVideoSettings;
    imageSettings?: DomainImageSettings;
    miscSettings?: DomainMiscSettings;
    storagePolicy?: StoragePolicy;
    fileCatalystSettings?: FileCatalystSettings;
    id?: number;

    // TODO: Remove this
    dataStores: DomainStorage[];
}


export class DomainStorage {
    location: StorageLocation;
    immutable: boolean;
    label: string;
    key: string;
    encryptionType: EncryptionTypes;
    isDefaultOnline: boolean;
}

export class StorageLocation {
    id: number;
    name: string;
}

export enum EncryptionTypes {
    AtRest = 'Encrypted at Rest',
    None = 'None'
}
